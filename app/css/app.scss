// Consts
$panelWid: 200px;

// Colors
$bgDark: #1e2229;
$bgMed: #2e333f;
$bgLight: #545d73;
$red: #e34d00;
$orange: #ffcc00;

// Shortcuts
@mixin resetMargin() {
	margin: 0;
	padding: 0;
}
@mixin resetList() {
	@include resetMargin();
	list-style: none;
	li {
		@include resetMargin();
	}
}

@font-face {
	font-family: Roboto;
	src: url("../fonts/RobotoCondensed-Light.ttf");
}


body {
	margin: 0;
	padding: 0;
	background: $bgMed;
	color: white;
	font-family: "Arial";
	font-size: 11pt;
}

img {
	vertical-align: middle;
}

xml {
	display: none;
}

h1 { color: magenta; } // should not be used

h2, h3, h4, h5 {
	.icon {
		vertical-align: bottom;
		width: 2em;
		height: 2em;
	}

	.icon,
	img {
		margin-right: 4px;
	}
}

h2 {
	@include resetMargin();
	margin-bottom: 32px;
	padding-bottom: 8px;
	border-bottom: 1px solid $orange;

	color: $orange;
	text-transform: uppercase;
	font-size: 18pt;
	font-family: Roboto;
}

hr {
	@include resetMargin();
	border: none;
	background: transparent;
	margin-top: 8px;
	margin-bottom: 8px;
	border-bottom: 1px solid $bgLight;
}

button {
	width: 100%;
	background-color: $red;
	color: white;
	text-transform: uppercase;
	padding: 10px;
	border: 1px solid #ff5d4a;
	box-shadow: 0px 2px 0px #b53d00;
	cursor: pointer;

	.icon {
		margin: -4px;
		width: 1.7em;
		height: 1.7em;
	}
}
button+button {
	margin-top: 2px;
}
button:hover {
	background-color: #ff5d4a;
}

button.cancel {
	background-color: $bgMed;
	border-color: $bgLight;
	box-shadow: 0px 2px 0px $bgMed;
}
button.cancel:hover {
	background-color: $bgLight;
}

button.fieldType {
	font-family: Roboto;
	font-size: 16pt;
	em {
		font-style: normal;
		opacity: 0.8;
		display: block;
		font-size: 60%;
	}
}

.buttons {
	display: flex;
	margin-top: 2px;
	margin-bottom: 2px;
	button {
		flex: 1 1 0;
	}
	button+button {
		margin-top: 0;
		margin-left: 2px;
	}
}


ul.form {
	@include resetList();
	padding: 8px;
	border: 1px solid $bgLight;

	>li {
		display: flex;
		align-items: center;

		.small {
			flex: 0 1 60px;
		}

		label {
			flex: 0 0 150px;
			padding-right: 16px;
			font-weight: bold;
			text-transform: uppercase;
			text-align: right;
			font-size: 80%;
		}

		input[type=checkbox]+label {
			flex: 1 1 auto;
			padding-right: 20px;
			white-space: nowrap;
			text-align: left;
		}

		> span {
			flex: 0 0 20px;
			opacity: 0.5;
			padding: 8px;
			text-align: center;
		}

		> span:last-child {
			text-align: left;
		}

		+li {
			margin-top: 8px;
		}
	}
}

select {
	display: block;
	width: 100%;
	padding: 3px;
}

input[type=text],
input[type=number] {
	display: block;
	width: 100%;
	padding: 8px;
	color: white;
	background-color: $bgDark;
	border: 1px solid $bgLight;
}

input[type=text]:focus,
input[type=number]:focus {
	border-color: $orange;
	box-shadow: 0px 0px 4px $red;
	outline: none;
}

#notificationList {
	position: absolute;
	z-index: 99;
	top: 30px;
	right: 0px;

	.notification {
		min-width: 150px;
		max-width: 300px;
		margin-bottom: 8px;

		background-color: $bgMed;
		border-left: 8px solid $orange;
		box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.3);

		.content {
			padding: 20px;
			padding-right: 80px;
		}
	}
}

.window {
	position: absolute;
	top: 0px;
	left: 0px;
	width: 100%;
	height: 100%;
	z-index: 98;

	.mask {
		position: absolute;
		z-index: 1;
		top: 0px;
		left: 0px;
		width: 100%;
		height: 100%;
		background-color: rgba(0,0,0,0.35);
	}

	.content {
		display: block;
		position: absolute;
		overflow: auto;
		z-index: 2;
		top: 0px;
		left: 0px;

		box-sizing: border-box;
		padding: 20px;
		height: 100%;

		width: 700px;
		background: $bgMed;
		border: 1px solid $bgLight;
		border-left: none;

		box-shadow: 0px 8px 32px rgba(0, 0, 0, 0.3);
	}
}


.cols {
	display: grid;
	width: 100%;
	gap: 16px;
	grid-template-columns: 0.55fr 1fr;
}

.dialog {
	position: absolute;
	top: 0px;
	left: 0px;
	width: 100%;
	height: 100%;
	z-index: 98;

	.mask {
		position: absolute;
		z-index: 1;
		top: 0px;
		left: 0px;
		width: 100%;
		height: 100%;
		background-color: rgba(0,0,0,0.35);
	}

	.wrapper {
		position: absolute;
		z-index: 2;
		box-sizing: border-box;
		display: block;
		padding: 20px;
		top: 200px;
		left: calc( 50% - 150px );
		width: 300px;

		background: $bgDark;
		border: 1px solid $orange;

		box-shadow: 0px 0px 16px $red, 0px 8px 32px rgba(0, 0, 0, 0.3);

		.buttons {
			margin-top: 30px;
			button {
				flex: 1 1 0;
			}
			button.confirm {
				flex-grow: 2;
			}
		}
	}
}

.dialog.fieldTypes {
	.wrapper {
		width: auto;
		padding: 4px;
	}
	.content {
		display: grid;
		gap: 2px;
		grid-template-columns: repeat(3,80px);

		button {
			margin: 0;
		}
	}
}


.sortable-placeholder {
	min-height: 1.3em;
	outline: 1px dashed $orange;
	outline-offset: -2px;
	background-color: $bgDark;
}

*[draggable=true] {
	background: url("/img/icons/drag.png") no-repeat;
	background-position: right center;
	background-size: contain;
	padding-right: 35px !important;
}

.editor {

	canvas#webgl {
		// width: calc( 100% - $panelWid ) !important;  // TODO
		height: 100% !important;
		position: absolute;
		left: $panelWid;
	}

	.panel {
		position: absolute;
		height: 100%;
		width: $panelWid;
		padding: 5px;
		background: $bgDark;
		border-color: $bgLight;
		border-style: solid;
		box-shadow: 0px 0px 16px black inset;
		z-index: 1;
		box-sizing: border-box;
	}
	.panel.left {
		left: 0px;
		border-right-width: 1px;
	}
	.panel.right {
		right: 0px;
		border-left-width: 1px;
	}


	#mainBar {
		margin-bottom: 8px;
	}

	#layers {
		ul.niceList {
			li {
				.name {
					flex: 1 1 auto;
					order: 1;
					display: block;
					cursor: pointer;
				}
				.vis {
					flex: 0 0 auto;
					padding: 10px;
					margin: -10px;
					color: white;
					text-shadow: 0px 0px 4px black;
					order: 2;
					display: block;
					cursor: zoom-out;
				}
				.vis:hover {
					outline: 1px solid white;
					outline-offset: -4px;
				}
			}
		}
	}

	#palette {
		background-color: $bgDark;

		ul {
			@include resetList();
			padding: 4px;

			>li {
				display: block;
				min-height: 16px;
				cursor: pointer;
			}
			>li:hover {
				outline: 1px solid white;
				outline-offset: -1px;
			}
			// >li+li {
				// margin-left: 2px;
			// }

			li.color {
				padding-left: 10px;
				overflow: hidden;
				line-height: 32px;
				box-shadow: -2px 0px 0px rgba(0, 0, 0, 0.3) inset;
			}
			li.color.active {
				outline: 2px solid white !important;
			}
		}
	}
}


ul.niceList:first-child {
	margin-top: 0;
}
ul.niceList {
	@include resetList();
	padding: 4px;
	margin-top: 4px;
	min-height: 200px;
	margin-bottom: 4px;
	border: 1px solid $bgLight;
	background-color: $bgDark;

	li {
		display: flex;
		align-items: center;
		padding: 10px;
		border-top: 1px solid $bgDark;
		border-bottom: 1px solid $bgDark;
		background-color: $bgMed;
		cursor: pointer;
		.icon {
			margin-right: 8px;
		}
	}

	li.active {
		background-color: $orange;
		color: black;
		box-shadow: 0px 0px 2px #ffffcc inset, 0px 0px 4px #aa0000;
	}

	li.hidden {
		opacity: 0.4;
		.vis {
			background: transparent;
			cursor: zoom-in;
		}
	}
	li:not(.active):hover {
		outline: 1px solid #586279;
		outline-offset: -1px;
	}
}

.icon {
	display: inline-block;
	vertical-align: middle;
	width: 1.3em;
	height: 1.3em;
	background-position: center center;
	background-repeat: no-repeat;
	background-size: contain;
}
.icon.entity	{ background-image: url("/img/icons/entity.png"); }
.icon.layer		{ background-image: url("/img/icons/layer.png"); }
.icon.intGrid	{ background-image: url("/img/icons/intGrid.png"); }

.black		{ filter: brightness(0);}
.orange		{ filter: brightness(0.6) sepia(1) hue-rotate(0.25rad) saturate(10); }



.window.defEditor {
	.mainList {
		ul {
			border: 1px solid $bgLight;
		}

		button.delete {
			flex: 0 0 32px;
		}
	}
}

.window.layerDefs {
	ul.intGridValues {
		@include resetList();
		display: grid;
		width: 100%;
		grid-template-columns: repeat(4, 1fr);
		grid-template-rows: calc( 64px + 2 * 1.2em );
		gap: 8px;

		li {
			position: relative;
		}

		li.value {
			input[type=color] {
				width: 100%;
				height: 64px;
			}

			input.name {
				display: block;
				text-align: center;
				font-style: italic;
			}

			span.id {
				display: block;
				text-align: center;
				font-weight: bold;
			}

			a.remove {
				display: none;
				position: absolute;
				top: 0px;
				right: 0px;
				background: black;
				color: white;
				padding: 3px;
				text-decoration: none;
			}
		}
		li.value.removable a.remove {
			display: block;
		}

		li.add button {
			width: 100%;
			height: 64px;
			padding: 0;

			line-height: 64px;
			text-align: center;
			font-size: 300%;
			text-decoration: none;
			color: white;
		}
	}


	ul.form:not(.type-IntGrid) .IntGrid {
		display: none;
	}

	ul.form:not(.type-Entities) .Entities {
		display: none;
	}
}

.window.entityDefs {
	.content {
		width: 900px;
	}

	input[type=color] {
		min-height: 32px;
	}

	.fields {
		margin-top: 20px;

		.cols {
			grid-template-columns: 0.8fr 1fr;
		}
		ul.form label {
			flex: 0 0 100px;
		}
	}
}