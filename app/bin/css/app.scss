// Colors
$bgDark: #1e2229;
$bgMed: #2e333f;
$bgLight: #545d73;
$bgLighter: #737f9d;
$red: #e34d00;
$darkRed: #791105;
$orange: #ffcc00;
$help: #79dd8a;
$helpDark: #3c6148;

// Shortcuts
@mixin resetMargin() {
	margin: 0;
	padding: 0;
}

@font-face {
	font-family: Roboto;
	src: url("../fonts/RobotoCondensed-Light.ttf");
}

@font-face {
	font-family: Roboto Bold;
	src: url("../fonts/RobotoCondensed-Bold.ttf");
}


body {
	margin: 0;
	padding: 0;
	background: $bgMed;
	color: white;
	font-family: "Arial";
	font-size: 11pt;
}

ul {
	margin: 0;
	padding: 0;
	list-style: none;
	li {
		margin: 0;
		padding: 0;
	}
}

* {
	user-select: none;
}

a {
	color: $orange;
}

img {
	vertical-align: middle;
}

xml {
	display: none;
}

h1 { color: #ff00ff; } // should not be used

h1,
h2,
h3,
h4,
h5 {
	@include resetMargin();

	.icon {
		vertical-align: bottom;
		width: 2em;
		height: 2em;
	}

	.icon,
	img {
		margin-right: 4px;
	}
}

h1 {
	font-family: Roboto;
}

h2 {
	margin-bottom: 32px;
	padding-bottom: 8px;
	border-bottom: 1px solid $orange;

	font-family: Roboto;
	font-size: 18pt;
	color: $orange;
	text-transform: uppercase;
}

h3 {
	margin-top: 16px;
	margin-bottom: 8px;
	padding-bottom: 2px;
	border-bottom: 1px solid $orange;

	font-family: Roboto;
	font-size: 13pt;
	color: $orange;
	text-transform: uppercase;
}

h4 {
	margin-bottom: 4px;
	padding-bottom: 2px;

	font-family: Roboto;
	font-size: 12pt;
	color: $orange;
	text-transform: uppercase;
}

hr {
	@include resetMargin();
	border: none;
	background: transparent;
	margin-top: 8px;
	margin-bottom: 8px;
	border-bottom: 1px solid $bgLight;
}

button {
	width: 100%;
	margin: 1px;
	padding: 10px;

	color: white;
	text-transform: uppercase;
	text-align: center;

	border: 1px solid #ff5d4a;
	box-shadow: 0px 2px 0px #b53d00;
	background-color: $red;
	cursor: pointer;

	>.icon {
		margin: -4px;
		width: 1.7em;
		height: 1.7em;
	}

	&:hover {
		background-color: #ff5d4a;
	}

	&:focus {
		outline: inherit;
	}

	&.active {
		background-color: $orange;
		border-color: #ffff00;
	}
}

button.cancel,
button.gray,
button.grey {
	background-color: $bgLight;
	border-color: $bgLighter;
	box-shadow: 0px 2px 0px $bgLight;
	&:hover {
		background-color: $bgLighter;
	}
}

button[href] {
	background-color: $bgMed;
	border-color: $bgLight;
	box-shadow: 0px 0px 0px $bgLight;
	text-decoration: underline;
	text-transform: none;

	&:hover {
		background-color: $bgLight;
	}
}

button.dark,
button.close {
	background-color: $bgDark;
	border-color: $bgMed;
	box-shadow: 0px 2px 0px $bgMed;
	&:hover {
		background-color: $bgLight;
	}
}

#miniNotif {
	position: absolute;
	z-index: 98;
	bottom: 15px;
	left: 0px;
	display: none;

	color: $bgLighter;
	font-size: 9pt;
	background-color: rgba(0, 0, 0, 0.4);
	padding: 4px;
	padding-left: 16px;
	border-radius: 3px;

	pointer-events: none;
}

#updateInstall {
	display: none;
	position: absolute;
	top: 15px;
	right: 0;
	z-index: 99;

	button {
		display: grid;
		grid-template-rows: auto auto;
		width: auto;
		padding: 8px;
		padding-right: 16px;

		text-align: left;

		animation: slideUp 2s;
		box-shadow: 0px 3px 0px #b53d00, 0px 0px 16px $red;

		strong {
			font-size: 1.2em;
			margin-bottom: 4px;
		}

		em {
			opacity: 0.7;
			font-size: 0.8em;
			font-style: normal;
		}
	}
}


.buttons {
	display: flex;
	flex-wrap: wrap;
	margin-top: 2px;
	margin-bottom: 2px;
	button {
		flex: 1 1 0;
	}
	button.debug {
		flex: 0 0 0;
		display: none;
	}
}

.help:not(.icon) {
	color: $help;
	font-family: Roboto;
	font-size: 1.1em;
	padding: 10px;
	border: 1px dotted $help;
}

a.exploreTo {
	flex: 0 0 auto !important;
	padding: 8px;
	background-color: $bgLight;
	border-radius: 3px;
	cursor: pointer;

	&:hover {
		color: black;
		background-color: $orange;
	}
	&::before {
		content: "📁";
	}
}

#guide {
	display: flex;
	padding: 2px;
	min-height: 1.3em;

	vertical-align: middle;
	font-family: Roboto;
	color: $help;
	font-style: italic;
	font-size: 0.9em;

	border: 1px dotted $bgMed;

	>span {
		padding: 2px;
		padding-left: 1px;
		padding-right: 8px;
		white-space: nowrap;
		flex: 0 1 auto;
		margin-right: 2px;
		background-color: $bgMed;
		border-radius: 3px;
		border-left: 1px solid $bgLight;
	}

	.key {
		color: white;
	}
}

div.warning:not(.window) {
	box-sizing: border-box;
	padding: 8px;
	margin-top: 4px;
	margin-bottom: 16px;
	border: 1px dashed red;
	color: white;
	box-shadow: 0px 0px 32px darkred inset, 0px 0px 4px darkred;
	text-shadow: 0px -1px 4px red, 0px 1px 4px red;
	background-color: rgba(0,0,0, 0.66);
}

div.info {
	display: grid;
	justify-items: center;
	align-items: center;
	box-sizing: border-box;
	font-size: 14pt;
	width: 32px;
	height: 32px;
	margin-left: 4px;

	font-weight: bold;
	text-align: center;
	color: $help;
	border: 3px solid $help;
	border-radius: 16px;
	cursor: help;

	&:hover {
		color: $orange;
		border-color: $orange;
	}

	&::before {
		content: "i";
	}
}

span.key,
div.key {
	display: inline-block;
	margin: 2px;
	padding: 1px;
	padding-left: 2px;
	padding-right: 2px;
	min-width: 16px;

	// color: #6d5f4d;
	text-align: center;
	text-transform: uppercase;
	font-family: Roboto;
	font-style: normal;

	background-color: rgba(207, 197, 172, 0.45);
	border: 1px solid rgba(235, 223, 195, 0.3);
	border-bottom: 2px solid rgba(131, 114, 90, 0.3);
	box-shadow: 0px 0px 4px black;
	border-radius: 2px;
}


.path {
	flex: 1 1 auto;
	text-align: right;
	overflow: auto;
	opacity: 1;
	align-items: center;

	span {
		vertical-align: middle;
	}
	span+span {
		margin-left: 2px;
	}

	span:not(.slash) {
		display: inline-block;
		font-size: 9pt;

		&:last-of-type {
			color: white !important;
			font-weight: bold;
			font-size: 10pt;
		}
	}
	span.slash {
		color: $bgLighter;
		font-weight: bold;
		font-size: 12pt;
	}
}


canvas.tile {
	width: 32px;
	height: 32px;
	border: 1px solid $bgLight;
	image-rendering: pixelated;

	&.empty {
		background-image: url("../img/stripes.png");
	}

	&:not(.active) {
		cursor: not-allowed;
		opacity: 0.4;
		&:hover {
			border-color: $red;
		}
	}

	&.active {
		&.empty {
			border-color: $red;
		}
		&:hover {
			border-color: $orange;
			cursor: pointer;
		}
	}

}


ul.niceList {
	box-sizing: border-box;
	padding: 4px;
	margin-top: 4px;
	min-height: 200px;
	margin-bottom: 4px;
	border: 1px solid $bgLight;
	background-color: $bgDark;
	overflow-x: hidden;

	&:first-child {
		margin-top: 0;
	}

	&:empty {
		background-image: url("../img/stripes.png");
		box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.4) inset;
		text-align: center;
		padding-top: 30px;
	}

	&:empty::before {
		content: "No element";
		color: $bgLight;
		font-style: italic;
		font-family: Roboto;
		font-size: 1.3em;
	}

	&#layers:empty::before {
		content: "No layer";
	}

	li:not(.title) {
		display: grid;
		justify-items: left;
		align-items: center;
		grid-template-columns: auto auto;
		gap: 0px 8px;
		padding: 8px;

		font-size: 12pt;

		border-bottom: 1px solid $bgDark;
		background-color: $bgMed;
		cursor: pointer;

		.sub {
			display: block;
			width: 100%;
			text-align: right;
			font-size: 0.7em;
			opacity: 0.5;
		}

		&:not(.active):hover {
			outline: 1px solid #586279;
			outline-offset: -1px;
		}
	}

	li.title {
		display: grid;
		grid-template-columns: auto min-content;
		align-items: center;

		padding: 4px;
		margin-top: 2px;

		color: $orange;
		font-size: 0.8em;
		font-family: Roboto;

		border-top: 1px solid $bgLight;

		.links {
			display: flex;
			a+a {
				margin-left: 1px;
			}
		}

		a {
			font-size: 1.1em;
			padding: 3px;
			background-color: $bgMed;
			border-radius: 2px;
			cursor: pointer;
			color: white;

			&:hover {
				background-color: white;
			}
		}
	}
	li div.error {
		grid-column: span 2;
		grid-row: 2;
		padding: 8px;
		margin-top: 4px;

		font-size: 10pt;
		color: white;
		text-transform: uppercase;

		border-radius: 4px;
		background-color: $darkRed;
		border: 1px solid $red;
		outline: none;
		box-shadow: 0px 0px 16px $red;
	}

	li.iconLeft {
		grid-template-columns: min-content auto;
		.icon,
		.entityPreview {
			order: 0;
		}
	}

	li.iconRight {
		grid-template-columns: auto min-content;
		.icon,
		.entityPreview {
			order: 1;
		}
	}

	li.active {
		background-color: $orange;
		color: black;
		box-shadow: 0px 0px 2px #ffffcc inset, 0px 0px 4px #aa0000;
	}

	li.hidden {
		opacity: 0.4;
		.vis {
			background: transparent;
			cursor: zoom-in;
		}
	}
}

ul.log {
	box-sizing: border-box;
	padding: 4px;
	margin-bottom: 4px;

	max-width: 80vw;
	min-width: 50vw;
	min-height: 300px;
	max-height: 80vh;

	border: 1px solid $bgLight;
	background-color: $bgDark;
	overflow: auto;

	li {
		padding: 4px;
	}
	li:hover {
		outline: 1px dashed $bgLight;
	}

	li span.op {
		display: inline-block;
		margin-left: 8px;
		padding: 2px;
		padding-left: 4px;
		padding-right: 4px;
		font-size: 8pt;
		color: white;
		background-color: $bgLight;
		border-radius: 2px;
	}
	li.opAdd {
		color: #a7d93d;
		span.op {
			color: black;
			background-color: #a7d93d;
		}
	}
	li.opRemove {
		color: $red;
		span.op {
			background-color: $red;
		}
	}
	li.opChecksumFix {
		color: $bgLighter;
	}
	li+li {
		margin-top: 8px;
	}
}

.icon {
	display: inline-block;
	vertical-align: middle;
	width: 1.3em;
	height: 1.3em;
	background-position: center center;
	background-repeat: no-repeat;
	background-size: contain;
}
.icon.help {
	display: grid;
	align-items: center;
	width: auto;
	height: auto;
	font-size: 2em;
	font-family: Roboto;
	font-weight: bold;
	&::before {
		content: "?";
	}
}
.icon.entity	{ background-image: url("../img/icons/entity.png"); }
.icon.tile		{ background-image: url("../img/icons/tile.png"); }
.icon.layer		{ background-image: url("../img/icons/layer.png"); }
.icon.intGrid	{ background-image: url("../img/icons/intGrid.png"); }
.icon.level		{ background-image: url("../img/icons/level.png"); }
.icon.project	{ background-image: url("../img/icons/projectSettings.png"); }
.icon.enum		{ background-image: url("../img/icons/enum.png"); }
.icon.close		{ background-image: url("../img/icons/close.png"); }

.icon.mouseLeft		{ background-image: url("../img/icons/mouseLeft.png"); image-rendering: pixelated; }
.icon.mouseRight	{ background-image: url("../img/icons/mouseRight.png"); image-rendering: pixelated; }
.icon.mouseWheel	{ background-image: url("../img/icons/mouseWheel.png"); image-rendering: pixelated; }

.black		{ filter: brightness(0);}
.orange		{ filter: brightness(0.6) sepia(1) hue-rotate(0.25rad) saturate(10); }



.icon.fieldType {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	width: 64px;
	height: 64px;
	overflow: hidden;
	box-sizing: border-box;

	font-family: Roboto;
	border: 1px dashed rgba(255, 255, 255, 0.8);

	.typeName {
		font-style: normal;
		font-size: 9pt;
		opacity: 0.7;
	}

	.typeIcon {
		font-size: 21pt;
		opacity: 0.8;
		text-shadow: 0px 2px 2px rgba(0, 0, 0, 0.4);
	}
}


.icon.entityPreview {
	display: grid;
	justify-items: center;
	align-items: center;

	width: auto;
	height: auto;
	overflow: hidden;
	padding: 2px;
	background-color: $bgMed;
	border-radius: 3px;
}


.pivotEditor {
	width: calc( 3*18px );
	position: relative;
	display: grid;
	align-items: stretch;
	justify-items: stretch;
	grid-template-columns: repeat(3, 18px);
	grid-template-rows: repeat(3, 18px);

	.bg {
		position: absolute;
		margin-top: calc( 33.33% / 2 );
		margin-left: calc( 33.33% / 2 );
		width: 66.66%;
		height: 66.66%;
		border: 1px dashed white;
		z-index: -1;
	}

	label {
		display: grid;
		align-items: center;
		justify-items: center;
		cursor: pointer;
	}
	label:hover {
		outline: 1px dashed $orange;
		outline-offset: -1px;
	}
	label input[type=radio] {
		width: 50%;
		height: 50%;
		opacity: 0.7;
		cursor: pointer;
	}
	label input[type=radio]:checked {
		width: 100%;
		height: 100%;
		opacity: 1;
	}
}


ul.form {
	padding: 8px;
	border: 1px solid $bgLight;

	>li {
		display: flex;
		flex-wrap: wrap;
		align-items: flex-start;

		>* {
			flex: 1 1 0px;
		}
		>.warning {
			flex: 1 0 100%;
		}
		>.pivot {
			flex: 0 0 auto;
		}
		>input[type=text],
		>input[type=text] {
			width: 0px; // for flex min-width
		}
		>input[type=color] {
			flex: 0.1 1 32px;
		}

		>input[type=checkbox] {
			flex: 0 1 auto;
		}
		>select {
			width: 0;
			flex: 1 1 0;
		}

		.small {
			flex: 0 1 60px;
		}

		div.info {
			flex: 0 0 32px;
		}

		div.help {
			flex: 1 0 100%;
			box-sizing: border-box;
		}

		>label:first-of-type {
			flex: 0 0 150px;
			align-self: stretch;
			padding-top: 8px;
			padding-right: 16px;
			font-weight: bold;
			text-transform: uppercase;
			text-align: right;
			font-size: 80%;
		}

		input[type=text]:not(:read-only):hover {
			outline: 1px solid $orange;
		}

		input[type=checkbox]+label {
			flex: 1 1 auto;
			padding-right: 20px;
			white-space: nowrap;
			text-align: left;
		}

		input[type=color] {
			height: 32px;
			cursor: pointer;
			padding: 0;
		}
		input[type=color]:hover {
			outline: 1px solid $orange;
		}

		> span {
			flex: 0 0 20px;
			opacity: 0.5;
			padding: 8px;
			text-align: center;
			white-space: nowrap;
		}
		> span.long {
			flex: 1 1 20px;
			white-space: normal;
			text-align: left;
		}

		> span:last-child {
			text-align: left;
		}

		+li {
			margin-top: 8px;
		}
	}
}

select {
	display: block;
	padding: 8px;
	max-width: 100%;

	&.gray {
		border: 1px dashed $bgLight;
		padding: 8px;
		color: white;
		background-color: $bgMed;
		background-image: url("../img/stripes.png");
	}

	option {
		overflow: hidden;
	}
}

input[type=text],
input[type=number] {
	display: block;
	padding: 8px;
	color: white;
	background-color: $bgDark;
	border: 1px solid $bgLight;
	&:read-only {
		background-color: transparent;
	}
	&:focus {
		border-color: $orange;
		box-shadow: 0px 0px 4px $red;
		outline: none;
	}
}

input[type=checkbox] {
	width: 24px;
	height: 24px;
	&:hover {
		outline: 1px solid $orange;
	}
}

input[type="file"] {
	display: none;
}

textarea {
	resize: none;
	height: 200px;
	padding: 8px;
	color: white;
	overflow-y: auto;
	background-color: $bgDark;
	border: 1px solid $bgLight;
	box-shadow: 0px 0px 16px black inset;
	&:focus {
		border-color: $orange;
		box-shadow: 0px 0px 4px $red;
		outline: none;
	}
}

.tip {
	position: absolute;
	z-index: 99;
	box-sizing: border-box;

	border-radius: 2px;
	background-color: $helpDark;
	box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.3);
	pointer-events: none;

	.content {
		display: grid;
		grid-template-columns: auto min-content;
		box-sizing: border-box;

		width: 100%;

		padding: 4px;
		padding-left: 8px;
		padding-right: 8px;
		align-items: center;

		font-size: 0.8em;
		color: $help;

		.text {
			max-width: 250px;
			text-shadow: 0px 1px 0px rgba(0,0,0, 0.5), 0px 2px 4px rgba(0,0,0, 0.5);
			font-style: italic;
		}

		.keys {
			font-style: normal;
			margin-left: 20px;
			white-space: nowrap;
		}

		.key {
			color: white;
		}
	}

	&.infoTip .content {
		padding: 10px;
		font-style: normal;
		font-size: 1em;
	}
}

#notificationList {
	position: absolute;
	display: flex;
	flex-direction: column;

	box-sizing: border-box;
	z-index: 99;
	bottom: 0px;
	right: 0px;
	padding-bottom: 30px;
	overflow: hidden;
	pointer-events: none;

	.notification {
		min-width: 150px;
		max-width: 300px;
		margin-bottom: 8px;

		background-color: $bgDark;
		border-left: 10px solid $bgLight;
		box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.3);
		animation: slideUp 1s;

		.content {
			padding: 20px;
			padding-right: 80px;

			pre {
				font-size: 8pt;
			}
		}
	}

	.notification:not(.latest) {
		opacity: 0.5;
		border-left-width: 3px;
		transition: border 0.3s, opacity 0.3s;
		.content {
			transition: padding 0.3s ease;
			padding-top: 10px;
			padding-bottom: 10px;
		}
	}
}

.layerPickNotif {
	position: absolute;
	z-index: 99;
	display: grid;
	align-items: center;
	justify-items: center;
	top: 5px;

	box-sizing: border-box;
	pointer-events: none;


	span {
		display: block;
		padding: 4px 16px;
		font-family: Roboto;
		font-size: 30pt;
		color: $orange;
		background-color: rgba(0, 0, 0, 0.8);
		border-radius: 8px;

		animation: slideDown 1s;
	}
}

@keyframes slideUp {
	from {
		max-height: 0;
		overflow: hidden;
	}
	to {
		max-height: 200;
	}
}

.lastChance {
	position: absolute;
	z-index: 99;
	top: 40px;
	right: 0;

	min-width: 150px;

	background-color: $darkRed;
	border-left: 4px solid $red;
	box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.3);
	animation: slideUp 1.2s;

	.content {
		display: grid;
		align-items: center;
		width: 100%;
		box-sizing: border-box;
		padding: 20px;
		padding-right: 80px;
		gap: 10px;

		grid-template-columns: min-content auto;
		grid-template-rows: auto auto;
		justify-content: right;
		button {
			grid-row: 1/3;
			height: 100%;
		}
		.action {
			grid-column: 2/3;
			font-weight: bold;
			color: $orange;
		}
		.desc {
			grid-column: 2/3;
			grid-row: 2/3;
			max-width: 250px;
			font-style: italic;
			font-size: 9pt;
			color: white;
			opacity: 0.7;
		}
	}
}

.window {
	position: absolute;
	left: 0px;
	top: 0px;
	width: 100vw;
	height: 100vh;
	z-index: 98;

	.mask {
		position: absolute;
		z-index: 1;
		top: 0px;
		left: 0px;
		width: 100%;
		height: 100%;
		background-color: rgba(0,0,0,0.35);
	}

	&>.wrapper {
		display: block;
		position: absolute;
		overflow: auto;
		z-index: 2;
		top: 50px;
		left: 50px;

		box-sizing: border-box;
		padding: 20px;

		background: $bgMed;
		border: 1px solid $bgLight;

		box-shadow: 0px 8px 32px rgba(0, 0, 0, 0.3);
	}
}

.window.panel {
	left: 0px; // set on opening
	width: calc( 100vw - 400px );
	&>.wrapper {
		top: 0px;
		left: 0px;
		height: 100vh;
		border-left: none;

		.content {
			width: 700px;
		}
	}
}

.window.dialog {
	overflow: hidden;

	&.centered {
		display: grid;
		align-items: center;
		justify-items: center;
		>.wrapper {
			position: static;
		}
	}

	&>.mask {
		background-color: rgba(0,0,0,0.55);
	}

	&>.wrapper {
		padding: 16px;
		box-shadow: 0px 8px 32px rgba(0, 0, 0, 0.6);

		.buttons {
			margin-top: 16px;
			flex-wrap: wrap;

			button {
				flex: 1 1 0;
				margin: 1px;
			}

			button.confirm {
				flex-grow: 2;
			}
		}
	}

	&.warning .wrapper .content {
		max-width: 400px;
	}
}


.window.sync {
	.wrapper .content {
		max-width: none;
		h2 .file {
			color: white;
			text-transform: none;
		}
	}
}


.window.lostFile {
	.wrapper .content {
		max-width: 50vw;
		.path {
			text-align: left;
			padding: 4px;
			background-color: $bgDark;
			border: 1px solid $red;
		}
	}
}


.window.fileChanged {
	.wrapper .content {
		max-width: 50vw;
		.path {
			text-align: left;
			padding: 4px;
			background-color: $bgDark;
			border: 1px solid $red;
		}
	}
}


.window.helpWindow {
	.wrapper {
		max-height: 85vh;
		max-width: 60vw;
	}
	.version {
		font-size: 8pt;
		opacity: 0.75;
		margin-bottom: 10px;
	}
	dl {
		display: grid;
		grid-template-columns: 0.5fr 1fr;
		align-items: stretch;
		gap: 1px;

		dt {
			margin: 0;

			text-align: right;
			white-space: nowrap;

			.icon {
				width: 32px;
				height: 32px;
			}
		}

		dd {
			display: grid;
			align-items: center;
			margin: 0;

			font-family: Roboto;
		}


		&.major {
			dt {
				padding: 8px;
				background-color: $bgDark;
				border-radius: 4px;
			}
			dd {
				padding: 8px;
				background-color: $bgLight;
				border-radius: 4px;
				font-size: 1.5em;
			}
		}
		&.minor {
			dt {
				padding: 4px;
				padding-right: 8px;
				background-color: $bgDark;
				border-radius: 4px;
			}
			dd {
				padding-left: 10px;
			}
		}
	}
}

.window.dialog.fieldTypes,
.window.dialog.layerTypes {
	&>.wrapper {
		width: auto;
		padding: 4px;
	}
	.content {
		display: grid;
		width: 100%;
		gap: 2px;
		grid-template-columns: repeat(3, 33.33%);

		button {
			margin: 0;
		}
	}
}

.window.dialog.enums {
	.content button {
		display: flex;
		width: 100%;
		padding-top: 6px;
		padding-bottom: 6px;
		text-transform: none;

		.id {
			flex: 1 0 auto;
			text-align: left;
		}
		.source {
			flex: 0 1 0;
			margin-left: 8px;
			font-size: 8pt;
			opacity: 0.7;
		}
	}
}

.window.dialog.layerTypes {
	.icon {
		display: block;
		width: 3em;
		height: 3em;
		margin: auto;
		margin-bottom: 4px;
	}
}

.window.popOutPalette {
	&>.wrapper {
		overflow: hidden;
		padding: 0;
		border: none;
		outline: 1px solid white;
		box-shadow: 0px 0px 32px black;

		&>.content {
			width: #{"max(45vw, 500px)"};
			max-height: 70vh;
		}
	}
}


.panelMask {
	position: absolute;
	background-color: rgba(0,0,0,0.75);
	opacity: 0.5;
	z-index: 97;
}

.sortable-placeholder {
	min-height: 1.3em;
	outline: 1px dashed $orange;
	outline-offset: -2px;
	background-color: $bgDark;
}

*[draggable=true] {
	background: url("../img/icons/drag.png") no-repeat;
	background-position: left center;
	padding-left: 32px !important;
	cursor: ns-resize;
}


#debug {
	display: none;
	position: absolute;
	z-index: 99;
	padding: 8px;
	right: 0px;
	top: 0px;
	font-size: 9pt;
	color:white;
	text-shadow: 0px 1px 3px black;
	background-color: rgba(0, 0, 0, 0.4);
	max-width: 40vw;
	pointer-events: none;

	p {
		@include resetMargin();
		opacity: 0.5;
	}
	p:nth-of-type(1) {
		opacity: 1;
	}
	p:nth-of-type(2) {
		opacity: 0.7;
	}
	p+p {
		margin-top: 8px;
	}
}

canvas#webgl {
	position: absolute;
	top: 0;
	left: 0;
	height: 100vh !important;
	z-index: 1;
}

#page {
	position: absolute;
	top: 0;
	left: 0;
	z-index: 2;
}

#page.editor {
	#mainPanel {
		position: absolute;
		top: 0;
		left: 0;
		width: 400px;
		height: 100vh;

		display: grid;
		overflow: hidden;
		grid-template-rows: min-content 250px min-content min-content auto;
		padding: 5px;
		gap: 5px;
		background: $bgDark;
		border-color: $bgLight;
		border-style: solid;
		box-shadow: 0px 0px 16px black inset;
		box-sizing: border-box;

		#mainbar {
			overflow: hidden; // for title

			button.showHelp {
				flex: 0 1 0;
			}

			button.close {
				flex: 0 1 16px;
			}

			h2#levelName {
				margin: 0;
				padding: 0;
				margin-top: 8px;
				white-space: nowrap;
				border: none;
				cursor: pointer;
			}
			h2#levelName:hover {
				color: white;
			}
		}


		ul.niceList {
			min-height: auto;
		}

		ul#layers {
			overflow-x: hidden;
			overflow-y: auto;
			margin: 0;

			li {
				grid-template-columns: min-content min-content auto min-content;
				padding-top: 4px;
				padding-bottom: 4px;

				.index {
					min-width: 1.2em;
					text-align: center;
					color: $bgLighter;
					font-weight: bold;
					font-size: 14pt;
				}

				.name {
					font-size: 10pt;
					flex: 1 1 auto;
					order: 1;
					display: block;
					cursor: pointer;
				}

				.vis {
					flex: 0 0 auto;
					padding: 10px;
					margin: -10px;
					color: white;
					text-shadow: 0px 0px 4px black;
					order: 2;
					display: block;
					cursor: zoom-out;
				}
				.vis:hover {
					outline: 1px solid white;
					outline-offset: -4px;
				}
			}
		}

		ul.options {
			display: flex;
			justify-content: flex-end;

			li {
				display: flex;
				margin-right: 4px;
				align-items: center;
				font-size: 8pt;

				input[type=checkbox] {
					flex: 0 1 auto;
					width: 16px;
					height: 16px;
					cursor: pointer;
				}
				input:hover+label {
					color: $orange;
					cursor: pointer;
				}
				input.unsupported {
					opacity: 0.3;
				}
				input.unsupported+label {
					color: $bgLight;
				}
			}
		}

		#mainPaletteWrapper {
			overflow: auto;
			position: relative;
			outline: 1px solid white;

			ul.niceList {
				height: 100%;
				box-sizing: border-box;
			}
		}
	}
}


#page.updating {
	display: grid;
	width: 100vw;
	height: 100vh;
	align-content: center;
	justify-content: center;
	background-color: $bgDark;

	.wrapper {
		display: grid;
		padding-top: 32px;

		.logo {
			margin-bottom: 32px;
			font-family: Roboto;
			font-size: 110pt;
			line-height: 85%;
			text-align: center;
			color: $bgLight;
		}

		.updating {
			padding: 16px;
			font-size: 1.2em;
			color: black;
			border-radius: 3px;
			background-color: $orange;
			animation: slideUp 1s;
		}
	}
}

#page.home {
	display: grid;
	width: 100vw;
	height: 100vh;
	align-content: center;
	background-color: $bgDark;

	.wrapper {
		display: grid;
		grid-template-columns: 30% 40%;
		grid-template-rows: min-content 50vh min-content;
		box-sizing: border-box;
		width: 100%;
		height: 100%;
		align-items: center;
		justify-content: center;

		.header {
			grid-column: 1/3;

			.logo { // remember to update "Updating" page
				font-family: Roboto;
				font-size: 110pt;
				line-height: 85%;
				text-align: center;
				color: $orange;
			}

			.sub {
				font-family: Roboto;
				font-size: 18pt;
				text-align: center;
				color: $orange;
			}

			.version {
				font-size: 14pt;
				color: $bgLighter;
				text-align: center;
				margin-top: 8px;
				margin-bottom: 20px;
			}

			.disclaimer {
				margin-top: 8px;
				margin-bottom: 8px;
				padding: 16px;

				font-size: 9pt;

				background-color: $darkRed;
				border-radius: 3px;

				h2 {
					font-size: 10pt;
					border: none;
					margin: 0;
					padding: 0;
					margin-bottom: 4px;
				}

				p {
					margin: 0;
					margin-bottom: 4px;
				}

				strong {
					text-decoration: underline;
				}
			}

		}

		.files {
			grid-column: 1/2;
			display: grid;
			height: 100%;
			grid-template-rows: min-content auto;

			ul.recents {
				overflow-y: auto;
				margin-top: 8px;

				&:empty::before {
					content: "No recent project";
				}

				.path span:not(:last-of-type):not(.slash) {
					font-size: 8pt;
				}

				li {
					grid-template-columns: auto min-content;
					.exploreTo {
						padding: 4px 8px;
					}
				}

				li.missing .path span {
					text-decoration: line-through;
					font-weight: normal;
					color: $red !important;
				}

				li:first-of-type {
					// background-color: $bgLight;
					&:hover {
						outline-color: white;
					}
				}
				li:not(:first-of-type) {
					// background-color: $bgMed;
					opacity: 0.65;
				}
			}
			.buttons {
				margin: 0;
				.exit {
					flex: 0.3 1 0;
				}
			}
		}

		.about {
			grid-column: 2/3;
			display: grid;
			grid-template-rows: min-content auto;
			height: 100%;
			margin-left: 16px;

			.buttons {
				margin: 0;
			}

			.changelog {
				padding: 16px;
				box-sizing: border-box;
				margin-top: 8px;
				overflow-y: auto;
				max-height: 50vh;

				border: 1px solid $bgLight;
				border-radius: 3px;

				h1 {
					color: $orange;
					margin: 0;
					padding: 0;
					margin-bottom: 8px;
				}

				#changelogHtml {
					// overflow-y: auto;
					font-size: 10pt;
					color: #b5becd;

					h1 {
						display: none;
					}

					h1+h2 {
						margin-top: 0;
					}

					h2 {
						margin-top: 32px;
						margin-bottom: 8px;
						text-transform: none;
						font-size: 14pt;
					}

					ul {
						margin-bottom: 8px;
						li+li {
							margin-top: 8px;
						}
					}

					strong {
						color: white;
					}
				}

				#changelogMd {
					display: none;
				}
			}

		}


		.footer {
			grid-column: 1/3;

			.version {
				opacity: 0.6;
				text-align: center;
				margin-top: 20px;
				font-size: 0.8em;
			}
		}

	}
}

#page.editor.compactPanel {
	#mainPanel {
		width: 150px;
		grid-template-rows: min-content 200px min-content auto;
		.notCompact {
			display: none;
		}
		#guide {
			display: none;
		}

		ul#layers li {
			.index {
				font-size: 9pt;
				min-width: 0.9em;
			}
		}
		
		ul.niceList li {
			padding-top: 4px;
			padding-bottom: 4px;
			gap: 4px;

			.icon {
				width: 0.75em;
				height: 0.75em;
			}
		}

		h2#levelName {
			font-size: 1.1em;
		}
	}
	.window.panel {
		width: calc( 100vw - 150px );
	}
}


.palette {
	display: grid;
	grid-template-rows: auto fit-content(24px);
	align-items: center;
	width: 100%;
	height: 100%;
	background-color: $bgDark;
	image-rendering: pixelated;

	&.invalid {
		background: url("../img/stripes.png");
		.warning {
			color: $red;
			margin: 50px;
		}
	}

	.toolOptions {
		display: flex;
		flex-wrap: nowrap;
		padding-top: 1px;

		>*+* {
			margin-left: 10px;
		}

		>* {
			flex: 0 1 auto;
		}

		label {
			display: flex;
			align-items: center;
			flex-wrap: nowrap;
			white-space: nowrap;

			input[type=checkbox] {
				flex: 0 0 auto;
				width: 24px;
				height: 24px;
				margin-right: 4px;
			}
		}
		button {
			width: auto;
			padding-top: 4px;
			text-transform: none;
			padding-bottom: 4px;
			margin-bottom: 3px; // to show dropshadow
		}
	}


	ul.niceList {
		margin: 0;
		padding: 4px;
		width: 100%;
		height: 100%;

		>li {
			display: flex;
			min-height: 16px;
			cursor: pointer;
		}
		>li:hover {
			outline: 1px solid white;
			outline-offset: -1px;
		}

		li.entity {
			overflow: hidden;
			.entityPreview {
				margin-right: 8px;
			}
		}

		li.color {
			padding-left: 10px;
			overflow: hidden;
			line-height: 32px;
			box-shadow: -2px 0px 0px rgba(0, 0, 0, 0.3) inset;
		}

		li.color.active {
			outline: 2px solid white !important;
		}
	}
}


.tilesetPicker {
	position: relative;
	overflow: hidden;
	box-sizing: border-box;

	padding: 1px;
	width: 100%;
	height: 100%;

	img.atlas {
		image-rendering: pixelated;
		box-shadow: 0px 0px 32px black;
		outline: 1px solid $bgLight;
	}

	&.singleTileMode .selectionsWrapper .tileCursor.selection {
		border-width: 1px;
		border-color: $orange;
		border-style: solid;
		box-shadow: 0px 0px 16px $red;;
	}

	.selectionsWrapper,
	.cursorsWrapper {
		pointer-events: none;
		position: relative;

		.tileCursor {
			position: absolute;
			z-index: 1;
			min-width: 1px;
			min-height: 1px;
			box-sizing: border-box;
			pointer-events: none;
			border-color: rgba(255, 255, 255, 0.5);
			border-style: solid;
			border-width: 0px;

			&.mouseOver {
				border-color: rgba(255, 255, 255, 0.25);
			}

			&.randomMode {
				border-width: 1px;
				border-color: rgba(144, 238, 144, 0.5);
				border-style: dotted;
			}

			&.randomMode.selection {
				border-color: rgba(144, 238, 144, 1);
				border-style: solid;
			}

			&.stampMode.selection {
				border-color: #f3e4a4;
				border-style: solid;
			}

			&.left {	border-left-width: 1px; }
			&.right {	border-right-width: 1px; }
			&.top {		border-top-width: 1px; }
			&.bottom {	border-bottom-width: 1px; }

			// &.stampMode.left {	box-shadow: 0px -3px 0px #61a187; }
			// &.stampMode.left {		box-shadow: -3px 0px 0px #ff8344; }
			// &.stampMode.right {		box-shadow: 3px 0px 0px #ff8344; }
			// &.stampMode.top {		box-shadow: 0px -3px 0px #ff8344; }
			// &.stampMode.bottom {	box-shadow: 0px 3px 0px #ff8344; }

			&.remove {
				border-color: red;
			}


		}
	}
}

.window.singleTilePicker {
	z-index: 99;
	.content {
		width: 60vw;
		height: 60vh;
	}
}

.entityInstanceEditor {
	position: absolute;
	overflow: auto;
	z-index: 10;
	top: 0px;
	right: 0px;

	width: 200px;
	max-height: 90%;
	box-sizing: border-box;
	padding: 10px;
	border-left: 4px solid $orange;
	box-shadow: -4px 0px 16px rgba(0, 0, 0, 0.6);

	background-color: $bgDark;

	header {
		display: grid;
		grid-template-columns: auto min-content;
		width: 100%;
		padding-bottom: 4px;
		margin-bottom: 4px;

		font-weight: bold;
		color: $orange;

		border-bottom: 1px solid $bgLight;

		a {
			display: inline-block;
			padding: 2px 4px;
			font-size: 8pt;
			color: black;
			border-radius: 2px;
			background-color: $orange;
			cursor: pointer;

			&:hover {
				background-color: white;
			}
		}
	}

	.empty {
		color: $bgLighter;
		font-style: italic;
	}

	ul.form {
		padding: 0;
		border: none;
		&>li>label {
			flex: 0 0 100%;
			padding: 0;
			padding-top: 8px;
			text-align: left;
			font-size: 10pt;
			text-transform: none;
		}
		select.required {
			border-color: $red;
			color: white;
			background-color: $darkRed;
			box-shadow: 0px 0px 8px $red;
		}

		span.inputWithDefaultOption {
			display: flex;
			align-items: center;
			opacity: 1 !important;
			padding: 0 !important;
			flex: 1 0 auto !important;
			span.value {
				flex: 1 0 auto;
			}
			a.reset {
				flex: 0 0 0px;
				margin-left: 10px;
				font-size: 0.75em;
				text-decoration: underline;
				color: $orange;
			}
			a.reset:hover {
				color: white;
			}
		}

		a.usingDefault {
			display: flex;
			text-decoration: none;
			border: 1px dashed $bgLight;
			padding: 8px;
			align-items: center;
			background-color: $bgMed;
			background-image: url("../img/stripes.png");

			&.checkbox {
				padding: 0;
				padding-right: 8px;
			}

			span {
				opacity: 1;
				text-shadow: 2px 0px 4px $bgMed, 0px 2px 4px $bgMed, -2px 0px 4px $bgMed, 0px -2px 4px $bgMed;
				&.value {
					flex: 1 1 auto;
					color: white;
					font-style: italic;
				}
				&.label {
					font-size: 0.75em;
					font-style: italic;
					color: $bgLighter;
				}
			}

			&:hover {
				border-color: $orange;
			}
		}
		select.usingDefault {
			border: 1px dashed $bgLight;
			padding: 8px;
			color: white;
			background-color: $bgMed;
			background-image: url("../img/stripes.png");
		}

	}
}


.window.panel {
	button.delete {
		flex: 0 0 32px;
	}
}

.window.panel.levelList,
.window.panel.layerDefs,
.window.panel.tilesetDefs {
	.content{
		display: grid;
		height: 100%;
		justify-content: stretch;
		gap: 16px;
		grid-template-rows: min-content auto;
		grid-template-columns: 200px auto;

		.path {
			flex: 1 0 100%;
			box-sizing: border-box;
		}

		> .header {
			grid-column: 1/3;
			h2 {
				margin-bottom: 8px;
			}
		}

		>.mainList {
			display: grid;
			grid-template-rows: auto min-content;
		}
	}
}

.window.panel.levelList {
	.content {
		grid-template-columns: auto;
		width: 250px;
		>.header {
			grid-column: auto;
		}
		ul.form li label {
			flex: 1 0 100%;
			text-align: left;
		}
	}
}


.window.panel.editProject {
	.content {
		display: grid;
		grid-template-columns: auto;
		grid-template-rows: repeat(3, min-content);
		gap: 16px;
		height: 100%;

		h2 {
			margin-bottom: 0;
		}

		.buttons.main {
			margin-bottom: 10px;
		}
	}
}


.window.panel.editEnums {
	.content {
		display: grid;
		grid-template-columns: 200px auto;
		grid-template-rows: min-content auto;
		gap: 16px;
		height: 100%;

		.header {
			grid-column: 1/3;
		}
		.enumList {
			grid-column: 1/2;
			display: grid;
			grid-template-rows: auto min-content;
			overflow: hidden;
			ul {
				overflow: auto;
			}

			button[class^="import"]{
				flex: 1 0 100%;
			}
		}
		ul.enumForm {
			grid-column: 2/3;

			button.createEnumValue {
				flex: 1 0 100%;
			}

			ul.enumValues {
				li {
					display: grid;
					gap: 3px;
					grid-template-columns: 32px auto 32px;
					margin-bottom: 4px;
					input[type=color] {
						height: 24px;
					}
					input[type=text] {
						padding: 3px;
					}
					button {
						padding: 0;
					}
				}
			}


			.onlyExternal {
				display: none;
			}

			&.externalEnum {
				.noExternal {
					display: none;
				}
				li.onlyExternal {
					display: flex;
				}
				ul.enumValues li {
					grid-template-columns: auto;
				}

				.path {
					padding: 5px;
					text-align: left;
					border: 1px solid $bgLight;
				}
			}
		}
	}
}


.window.panel.layerDefs {
	.mainList ul:empty::before {
		content: "No layer";
	}
	ul.intGridValues {
		li {
			position: relative;
		}

		li+li {
			margin-top: 8px;
		}

		li.value {
			display: grid;
			align-items: center;
			grid-template-columns: 2em auto 64px;
			gap: 4px;

			input[type=color] {
				width: 100%;
				height: 100%;
			}

			input.name {
				text-align: center;
				font-style: italic;
			}

			span.id {
				text-align: center;
				font-weight: bold;
			}

			a.remove {
				display: none;
				position: absolute;
				top: 0px;
				right: 0px;
				background: black;
				color: white;
				padding: 3px;
				text-decoration: none;
			}
		}

		li.value.removable a.remove {
			display: block;
		}

		li.add button {
			padding: 0px;
			text-align: center;
			font-weight: bold;
			font-size: 200%;
			text-decoration: none;
			color: white;
		}
	}

	ul.form:not(.type-IntGrid) .IntGrid,
	ul.form:not(.type-Tiles) .Tiles,
	ul.form:not(.type-Entities) .Entities {
		display: none;
	}
}


.window.panel.tilesetDefs {
	.mainList ul:empty::before {
		content: "No tileset";
	}

	.content {
		grid-template-rows: min-content min-content min-content auto;
		.mainList {
			grid-row: 2/5;
		}
		ul.form {
			grid-row: 2/3;
		}
		.tilesDemo {
			grid-row: 3/4;
		}
		.pickerWrapper {
			grid-row: 4/5;
		}

		.tilesDemo canvas {
			display: block;
			width: 100%;
			image-rendering: pixelated;
		}
		.pickerWrapper {
			overflow: hidden;
			outline: 1px solid white;
			box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.4) inset;
			background-color: rgba(0, 0, 0, 0.4);
		}
	}
}


.window.panel.entityDefs {
	.content{
		display: grid;
		height: 100%;
		justify-content: stretch;
		gap: 16px;
		grid-template-rows: min-content auto auto;
		grid-template-columns: 200px 200px auto;

		>.header {
			grid-column: 1/4;
			h2 {
				margin-bottom: 8px;
			}
		}

		>.entityList {
			grid-row: 2/4;
			display: grid;
			grid-template-rows: auto min-content;
			overflow: hidden;
			ul {
				overflow: auto;
			}
			ul:empty::before {
				content: "No entity";
			}
		}
		>.entityForm {
			grid-column: 2/4;
			grid-row: 2/3;
			overflow: hidden;
		}

		>.fieldList {
			grid-column: 2/3;
			grid-row: 3/4;
			display: grid;
			grid-template-rows: auto min-content;
			overflow: hidden;
			ul {
				overflow: auto;
			}
			ul:empty::before {
				content: "No custom field";
			}
		}

		>.fieldForm {
			grid-column: 3/4;
			grid-row: 3/4;
			overflow: auto;
		}


		.renderMode {
			*[class*=mode_] {
				display: none;
			}
			&.mode_Rectangle .mode_Rectangle,
			&.mode_Ellipse .mode_Ellipse,
			&.mode_Tile .mode_Tile {
				display: block;
			}

			select, canvas {
				margin-left: 4px;
			}

			select.renderMode {
				flex: 0.5 1 0px;
			}

			canvas.tile {
				flex: 0 0 auto;
			}
		}
	}

	.content {
		width: 900px;
	}

	.previewWrapper {
		position: relative;
		float: right;
		margin: 8px;
		border: 1px solid $bgLight;

		.entityPreview {
			width: 64px;
			height: 64px;
		}

		.label {
			position: absolute;
			z-index: 1;
			bottom: 0px;
			right: 0px;
			font-size: 7pt;
			text-transform: uppercase;
		}
	}

	input[type=color] {
		min-height: 32px;
	}

	.fieldForm {
		ul.form li>label {
			flex: 0 0 100px;
		}

		input.type {
			font-family: 'Courier New', Courier, monospace;
		}

		ul.form *[class*="F_"] {
			display: none;
		}
		ul.form.type-F_Int .F_int,
		ul.form.type-F_Float .F_Float,
		ul.form.type-F_Bool .F_Bool,
		ul.form.type-F_Color .F_Color,
		ul.form.type-F_Enum .F_Enum,
		ul.form.type-F_String .F_String {
			display: flex;
		}

	}
}