// Colors
$bgDark: #1e2229;
$bgMed: #2e333f;
$bgLight: #545d73;
$red: #e34d00;
$orange: #ffcc00;

// Shortcuts
@mixin resetMargin() {
	margin: 0;
	padding: 0;
}

@font-face {
	font-family: Roboto;
	src: url("../fonts/RobotoCondensed-Light.ttf");
}


body {
	margin: 0;
	padding: 0;
	background: $bgMed;
	color: white;
	font-family: "Arial";
	font-size: 11pt;
}

ul {
	margin: 0;
	padding: 0;
	list-style: none;
	li {
		margin: 0;
		padding: 0;
	}
}

* {
	user-select: none;
}

img {
	vertical-align: middle;
}

xml {
	display: none;
}

h1 { color: yellow; background: red;} // should not be used

h2,
h3,
h4,
h5 {
	@include resetMargin();

	.icon {
		vertical-align: bottom;
		width: 2em;
		height: 2em;
	}

	.icon,
	img {
		margin-right: 4px;
	}
}

h2 {
	margin-bottom: 32px;
	padding-bottom: 8px;
	border-bottom: 1px solid $orange;

	font-family: Roboto;
	font-size: 18pt;
	color: $orange;
	text-transform: uppercase;
}

h3 {
	margin-top: 16px;
	margin-bottom: 8px;
	padding-bottom: 2px;
	border-bottom: 1px solid $orange;

	font-family: Roboto;
	font-size: 13pt;
	color: $orange;
	text-transform: uppercase;
}

hr {
	@include resetMargin();
	border: none;
	background: transparent;
	margin-top: 8px;
	margin-bottom: 8px;
	border-bottom: 1px solid $bgLight;
}

button {
	width: 100%;
	margin: 1px;
	padding: 10px;

	color: white;
	text-transform: uppercase;
	text-align: center;

	border: 1px solid #ff5d4a;
	box-shadow: 0px 2px 0px #b53d00;
	background-color: $red;
	cursor: pointer;

	>.icon {
		margin: -4px;
		width: 1.7em;
		height: 1.7em;
	}
}
button:hover {
	background-color: #ff5d4a;
}
button:focus {
	outline: inherit;
}
button.active {
	background-color: $orange;
	border-color: #ffff00;
}

button.cancel {
	background-color: $bgMed;
	border-color: $bgLight;
	box-shadow: 0px 2px 0px $bgMed;
}
button.cancel:hover {
	background-color: $bgLight;
}

.buttons {
	display: flex;
	flex-wrap: wrap;
	margin-top: 2px;
	margin-bottom: 2px;
	button {
		flex: 1 1 0;
	}
	button.debug {
		flex: 0 0 0;
		display: none;
	}
}




ul.niceList:first-child {
	margin-top: 0;
}
ul.niceList {
	padding: 4px;
	margin-top: 4px;
	min-height: 200px;
	margin-bottom: 4px;
	border: 1px solid $bgLight;
	background-color: $bgDark;

	li {
		display: grid;
		justify-items: left;
		align-items: center;
		grid-template-columns: auto auto;
		gap: 0px 8px;
		padding: 10px;

		font-size: 14pt;

		border-bottom: 1px solid $bgDark;
		background-color: $bgMed;
		cursor: pointer;

		.sub {
			grid-column: 1/3;
			grid-row: 2/3;
			font-size: 70%;
			opacity: 0.65;
			padding-left: 8px;
		}
	}

	li.iconLeft {
		grid-template-columns: min-content auto;
		.icon,
		.entityPreview {
			order: 0;
		}
	}

	li.iconRight {
		grid-template-columns: auto min-content;
		.icon,
		.entityPreview {
			order: 1;
		}
	}

	li.active {
		background-color: $orange;
		color: black;
		box-shadow: 0px 0px 2px #ffffcc inset, 0px 0px 4px #aa0000;
	}

	li.hidden {
		opacity: 0.4;
		.vis {
			background: transparent;
			cursor: zoom-in;
		}
	}
	li:not(.active):hover {
		outline: 1px solid #586279;
		outline-offset: -1px;
	}
}

.icon {
	display: inline-block;
	vertical-align: middle;
	width: 1.3em;
	height: 1.3em;
	background-position: center center;
	background-repeat: no-repeat;
	background-size: contain;
}
.icon.entity	{ background-image: url("/img/icons/entity.png"); }
.icon.tile		{ background-image: url("/img/icons/tile.png"); }
.icon.layer		{ background-image: url("/img/icons/layer.png"); }
.icon.intGrid	{ background-image: url("/img/icons/intGrid.png"); }
.icon.project	{ background-image: url("/img/icons/projectSettings.png"); }

.black		{ filter: brightness(0);}
.orange		{ filter: brightness(0.6) sepia(1) hue-rotate(0.25rad) saturate(10); }



.icon.fieldType {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	width: 64px;
	height: 64px;
	overflow: hidden;
	box-sizing: border-box;

	font-family: Roboto;
	border: 1px dashed rgba(255, 255, 255, 0.8);

	.typeName {
		font-style: normal;
		font-size: 9pt;
		opacity: 0.7;
	}

	.typeIcon {
		font-size: 21pt;
		opacity: 0.8;
		text-shadow: 0px 2px 2px rgba(0, 0, 0, 0.4);
	}
}


.icon.entityPreview {
	display: grid;
	justify-items: center;
	align-items: center;

	width: auto;
	height: auto;
	box-sizing: border-box; // Actual width/height are defined in code
	overflow: hidden;
	padding: 8px;
	background-image: url("/img/grid.png");
	box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.4) inset;
}


.pivotEditor {
	position: relative;
	display: grid;
	align-items: stretch;
	justify-items: stretch;
	grid-template-columns: repeat(3, 32px);
	grid-template-rows: repeat(3, 32px);

	.bg {
		position: absolute;
		margin-top: calc( 33.33% / 2 );
		margin-left: calc( 33.33% / 2 );
		width: 66.66%;
		height: 66.66%;
		border: 1px dashed white;
		z-index: -1;
	}

	label {
		display: grid;
		align-items: center;
		justify-items: center;
	}
	label:hover {
		outline: 1px dashed $orange;
		outline-offset: -1px;
	}
	label input[type=radio] {
		width: 45%;
		height: 45%;
		opacity: 0.7;
	}
	label input[type=radio]:checked {
		width: 80%;
		height: 80%;
		opacity: 1;
	}
}


ul.form {
	padding: 8px;
	border: 1px solid $bgLight;

	>li {
		display: flex;
		align-items: baseline;

		.small {
			flex: 0 1 60px;
		}

		>label:first-of-type {
			flex: 0 0 150px;
			padding-right: 16px;
			font-weight: bold;
			text-transform: uppercase;
			text-align: right;
			font-size: 80%;
		}

		input[type=text]:hover {
			outline: 1px solid $orange;
		}

		input[type=checkbox]+label {
			flex: 1 1 auto;
			padding-right: 20px;
			white-space: nowrap;
			text-align: left;
		}

		input[type=color] {
			height: 32px;
			cursor: pointer;
		}
		input[type=color]:hover {
			outline: 1px solid $orange;
		}

		> span {
			flex: 0 0 20px;
			opacity: 0.5;
			padding: 8px;
			text-align: center;
			white-space: nowrap;
		}

		> span:last-child {
			text-align: left;
		}

		+li {
			margin-top: 8px;
		}
	}
}

select {
	display: block;
	width: 100%;
	padding: 3px;
}

input[type=text],
input[type=number] {
	display: block;
	width: 100%;
	padding: 8px;
	color: white;
	background-color: $bgDark;
	border: 1px solid $bgLight;
}

input[type=text]:focus,
input[type=number]:focus {
	border-color: $orange;
	box-shadow: 0px 0px 4px $red;
	outline: none;
}

input[type="file"] {
	display: none;
}
label.file {
	@extend button;
}

#notificationList {
	position: absolute;
	box-sizing: border-box;
	z-index: 99;
	top: 0px;
	right: 0px;
	height: 100%;
	padding-top: 30px;
	overflow: hidden;
	pointer-events: none;

	.notification {
		min-width: 150px;
		max-width: 300px;
		margin-bottom: 8px;

		background-color: $bgMed;
		border-left: 8px solid $orange;
		box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.3);

		.content {
			padding: 20px;
			padding-right: 80px;
		}
	}
}

.window {
	position: absolute;
	left: 0px;
	top: 0px;
	width: 100%;
	height: 100%;
	z-index: 98;

	.mask {
		position: absolute;
		z-index: 1;
		top: 0px;
		left: 0px;
		width: 100%;
		height: 100%;
		background-color: rgba(0,0,0,0.35);
	}

	&>.wrapper {
		display: block;
		position: absolute;
		overflow: auto;
		z-index: 2;
		top: 50px;
		left: 50px;

		box-sizing: border-box;
		padding: 20px;

		background: $bgMed;
		border: 1px solid $bgLight;

		box-shadow: 0px 8px 32px rgba(0, 0, 0, 0.3);
	}
}

.window.panel {
	left: 300px;
	width: calc( 100% - 300px );
	&>.wrapper {
		top: 0px;
		left: 0px;
		height: 100%;
		border-left: none;

		.content {
			width: 700px;
		}
	}
}

.window.dialog {
	&>.wrapper {
		padding: 16px;

		.content {
			max-width: 260px;
		}

		.buttons {
			margin-top: 16px;
			flex-wrap: wrap;

			button {
				flex: 1 1 0;
				margin: 1px;
			}

			button.confirm {
				flex-grow: 2;
			}
		}
	}
}

.window.dialog.fieldTypes,
.window.dialog.layerTypes {
	&>.wrapper {
		width: auto;
		padding: 4px;
	}
	.content {
		display: grid;
		width: 100%;
		gap: 2px;
		grid-template-columns: repeat(3, 33.33%);

		button {
			margin: 0;
		}
	}
}

.window.dialog.layerTypes {
	.icon {
		display: block;
		width: 3em;
		height: 3em;
		margin: auto;
		margin-bottom: 4px;
	}
}

.window.floatingPalette {
	&>.wrapper {
		overflow: visible;
		padding: 0;
		border: none;
		outline: 2px solid black;
		box-shadow: 0px 0px 32px black;

		&>.content {
			max-width: 60vw;
			max-height: 80vh;
		}
	}
}


.panelMask {
	position: absolute;
	background-color: rgba(0,0,0,0.75);
	opacity: 0.5;
	z-index: 97;
}


.cols {
	display: grid;
	width: 100%;
	gap: 16px;
	grid-template-columns: 200px auto;
}

.sortable-placeholder {
	min-height: 1.3em;
	outline: 1px dashed $orange;
	outline-offset: -2px;
	background-color: $bgDark;
}

*[draggable=true] {
	background: url("/img/icons/drag.png") no-repeat;
	background-position: right center;
	padding-right: 35px !important;
}


#debug {
	display: none;
	position: absolute;
	padding: 8px;
	right: 0px;
	top: 0px;
	font-size: 9pt;
	color:white;
	text-shadow: 0px 1px 3px black;
	background-color: rgba(0, 0, 0, 0.4);
	p {
		@include resetMargin();
		opacity: 0.5;
	}
	p:nth-of-type(1) {
		opacity: 1;
	}
	p:nth-of-type(2) {
		opacity: 0.7;
	}
	p+p {
		margin-top: 8px;
	}
}

#editor {
	display: grid;
	grid-template-columns: 300px auto;
	width: 100%;
	height: 100%;

	#mainPanel {
		position: relative;
		display: grid;
		height: 100%;
		overflow: hidden;
		grid-template-rows: min-content 300px auto;
		padding: 5px;
		gap: 5px;
		background: $bgDark;
		border-color: $bgLight;
		border-style: solid;
		box-shadow: 0px 0px 16px black inset;
		box-sizing: border-box;

		h2#projectTitle {
			white-space: nowrap;
			overflow: hidden;
		}

		ul.niceList {
			min-height: auto;
		}

		ul#layers {
			overflow: auto;
			margin: 0;

			li {
				grid-template-columns: min-content auto min-content;

				.name {
					font-size: 10pt;
					flex: 1 1 auto;
					order: 1;
					display: block;
					cursor: pointer;
				}
				.vis {
					flex: 0 0 auto;
					padding: 10px;
					margin: -10px;
					color: white;
					text-shadow: 0px 0px 4px black;
					order: 2;
					display: block;
					cursor: zoom-out;
				}
				.vis:hover {
					outline: 1px solid white;
					outline-offset: -4px;
				}
			}
		}

		#mainPaletteWrapper {
			overflow: auto;

			ul.niceList {
				height: 100%;
				box-sizing: border-box;
			}
		}

		// #mainPaletteWrapper.popOut {
		// 	// overflow: visible;

		// 	.palette {
		// 		position: absolute;
		// 		z-index: 99;
		// 		box-sizing: border-box;
		// 		top: 30%;
		// 		// max-width: 50%;
		// 		height: 70%;
		// 		overflow: auto;
		// 		box-shadow: 0px 0px 32px black;
		// 		border: 1px solid white;
		// 	}
		// }
	}

	canvas {
		width: 100% !important;
		height: 100% !important;
	}
}


.palette {
	position: relative;
	background-color: $bgDark;
	image-rendering: pixelated;

	ul.niceList {
		margin: 0;
		padding: 4px;
		height: 100%;

		>li {
			display: flex;
			min-height: 16px;
			cursor: pointer;
		}
		>li:hover {
			outline: 1px solid white;
			outline-offset: -1px;
		}

		li.entity {
			overflow: hidden;
			.entityPreview {
				margin-right: 8px;
			}
		}

		li.color {
			padding-left: 10px;
			overflow: hidden;
			line-height: 32px;
			box-shadow: -2px 0px 0px rgba(0, 0, 0, 0.3) inset;
		}

		li.color.active {
			outline: 2px solid white !important;
		}
	}

	.tilesetPicker {
		position: relative;
		overflow: auto;
		box-sizing: border-box;

		padding: 1px;
		width: 100%;
		height: 100%;
		min-width: 400px;
		// min-height: 400px;

		outline: 1px solid white;

		.shadows {
			position: absolute;
			z-index: 2;
			width: calc( 100% - 1px );
			height: calc( 100% - 1px );
			pointer-events: none;
		}

		.wrapper {
			img.atlas {
				image-rendering: pixelated;
			}

			.selectionsWrapper,
			.cursorsWrapper {
				pointer-events: none;
				position: relative;

				.tileCursor {
					position: absolute;
					z-index: 1;
					min-width: 1px;
					min-height: 1px;
					box-sizing: border-box;
					outline: 1px dotted white;
					outline-offset: -1px;
					box-shadow: 0px 0px 1px black, 0px 0px 8px black;
					pointer-events: none;

					&.selection {
						outline: 1px solid #f3e4a4;
						box-shadow: 0px 0px 4px $orange, 0px 0px 16px $red;
					}
				}
			}

		}
	}

}

.instanceEditor {
	position: absolute;
	overflow: auto;
	z-index: 10;
	top: 0px;
	right: 0px;
	width: 200px;
	height: 100%;
	box-sizing: border-box;
	padding: 5px;
	background-color: $bgDark;

	ul.form {
		label {
			flex: 0 0 60px;
		}
	}
}


.window.panel.defEditor {
	.mainList {
		ul {
			border: 1px solid $bgLight;
		}

		button.delete {
			flex: 0 0 32px;
		}
	}
}

.window.panel.layerDefs {
	ul.intGridValues {
		li {
			position: relative;
		}

		li+li {
			margin-top: 8px;
		}

		li.value {
			display: grid;
			align-items: center;
			grid-template-columns: 64px 2em auto;

			input[type=color] {
				width: 100%;
				height: 100%;
			}

			input.name {
				text-align: center;
				font-style: italic;
			}

			span.id {
				text-align: center;
				font-weight: bold;
			}

			a.remove {
				display: none;
				position: absolute;
				top: 0px;
				right: 0px;
				background: black;
				color: white;
				padding: 3px;
				text-decoration: none;
			}
		}

		li.value.removable a.remove {
			display: block;
		}

		li.add button {
			padding: 0px;
			text-align: center;
			font-weight: bold;
			font-size: 200%;
			text-decoration: none;
			color: white;
		}
	}

	ul.form:not(.type-IntGrid) .IntGrid,
	ul.form:not(.type-Tiles) .Tiles,
	ul.form:not(.type-Entities) .Entities {
		display: none;
	}
}


.window.panel.tilesetDefs {
	li.tileset {
		display: block;

		canvas.demo,
		canvas.fullPreview {
			display: block;
			width: 100%;
			image-rendering: pixelated;
		}

		canvas.fullPreview {
			box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.4) inset;
			background-color: rgba(0, 0, 0, 0.4);
		}
	}
	span.path {
		flex: 1 1 auto;
		overflow: auto;
		background-color: $bgDark;
		opacity: 1;

		span {
			display: inline-block;
			font-size: 9pt;
		}
		span:last-of-type {
			color: $orange;
			font-weight: bold;
		}
		span+span::before {
			content: " / ";
		}
	}
}

.window.panel.entityDefs {
	.content {
		width: 900px;
	}

	button.delete {
		flex: 0 1 0;
	}

	.formsWrapper .previewWrapper {
		position: relative;
		float: right;
		margin: 8px;
		border: 1px solid $bgLight;

		.entityPreview {
			width: 64px;
			height: 64px;
		}

		.label {
			position: absolute;
			z-index: 1;
			bottom: 0px;
			right: 0px;
			font-size: 7pt;
			text-transform: uppercase;
		}
	}

	input[type=color] {
		min-height: 32px;
	}

	.fields {
		margin-top: 20px;

		.cols {
			grid-template-columns: 0.8fr 1fr;
		}
		ul.form li>label {
			flex: 0 0 100px;
		}

		ul.form li[class^="F_"] {
			display: none;
		}
		ul.form.type-F_Int li.F_int,
		ul.form.type-F_Float li.F_Float,
		ul.form.type-F_Bool li.F_Bool,
		ul.form.type-F_Color li.F_Color,
		ul.form.type-F_String li.F_String {
			display: flex;
		}

	}
}